"""
문제 및 강의 출처: https://youtu.be/2zjoKjt97vQ?si=PpaK6DISWRoLL4Id

유형: 그리디
제목: 곱하기 혹은 더하기

<문제>
각 자리가 숫자(0-9)로만 이루어진 문자열 S가 주어졌을 때, 왼쪽부터 오른쪽으로 하나씩 모든 숫자를 확인하며 숫자 사이에 'x'혹은 '+' 연산자를 넣어 결과적으로 만들어질 수 있는 가장 큰 수를 구하는 프로그램을 작성하세요. 단, +보다 x를 먼저 계산하는 일반적인 방식과는 달리, 모든 연산은 왼쪽에서부터 순서대로 이루어진다고 가정합니다.

만들어질 수 있는 가장 큰 수는 항상 20억 이하의 정수가 되도록 입력이 주어진다.

<나의 답안 해석>
두 피연산자 중에서 하나라도 0 혹은 1이면 덧셈을 해야 한다.
둘 다 2 이상이라면 곱셈을 해야 한다. 이 과정을 주어진 문자열 S의 처음부터 끝까지 수행한다.

연산이 일반적인 곱셈|덧셈과 다르게 무조건 왼쪽부터 순차적으로 진행된다. 따라서 문자열의 왼쪽부터 차례대로 살펴보면서 두 숫자 사이에 연산자를 집어넣는 매 순간에 최댓값을 생성한다면 결과적으로 나오는 수도 최대값이 된다.
"""

S = input()

n1 = int(S[0])
for i in range(1, len(S)):
  n2 = int(S[i])
  if n1 >= 2 and n2 >= 2:
    n1 *= n2
  else:
    n1 += n2

print(n1)
  


### 동영상 속에서 주어진 답 ###
"""
data = input()

result = int(data[0])

for i in range(1, len(data)):
  num = int(data[i])
  if num <= 1 or result <= 1:
    result += num
  else:
    result *= num

print(result)
"""